private int evaluate(Tile[][] currentBoard, byte currentColor) {
        int score = 0;
        int w1 = 1 ;
        int w2 = 1;
        int f1 = 0  ;
        int f2 =0 ;
        for (byte i = 0; i < currentBoard.length; i++) {
            for (byte j = 0; j < currentBoard.length; j++) {
                if (currentBoard[i][j].color == playerTurn) {
                    f1 += i;
                    f1 += j;
                    if((i+j)>3 && (i+j) < 11)f2 += abs(i-j);
//                    if
                } else if (currentBoard[i][j].color == (3 - playerTurn)) {
                    f1 += (7 - i);
                    f1 += (7 - j);
                    if((i+j)>3 && (i+j) < 11)f2 += abs(i-j);
                }
            }
        }
        score = f1*w1 + f2*w2 ;
        if(playerTurn == 1) {
            return score;
        }
        else {
            return -score;
        }
    }
